ðŸ§± 1. Build the package locally
In the root of your django-csvfixtures folder (the one containing pyproject.toml):

bash
ï¿¼Copiar cÃ³digo
python -m build
This will create:

dist/
â”œâ”€â”€ django_csvfixtures-1.0.0.tar.gz
â”œâ”€â”€ django_csvfixtures-1.0.0-py3-none-any.whl

If you donâ€™t have the build package yet:

pip install build

ðŸ§ª 2. Install it in your Django project (locally)

In your test Django projectâ€™s virtual environment, run:

pip install /absolute/path/to/django-csvfixtures/dist/django_csvfixtures-1.0.0-py3-none-any.whl

Example:

pip install ~/Projects/django-csvfixtures/dist/django_csvfixtures-1.0.0-py3-none-any.whl
âœ… This simulates a real PyPI install.

If youâ€™re actively developing the library and want to auto-reload changes, use an editable install:

pip install -e /absolute/path/to/django-csvfixtures
This links your Django project directly to the local source code â€” any edit in the library will immediately reflect in
your test project.